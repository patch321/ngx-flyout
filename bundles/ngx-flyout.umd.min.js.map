{"version":3,"sources":["ng://ngx-flyout/lib/flyout.service.ts","ng://ngx-flyout/lib/flyout.component.ts","ng://ngx-flyout/lib/flyout.module.ts"],"names":["FlyoutService","Injectable","args","providedIn","FlyoutComponent","EventEmitter","prototype","ngOnInit","this","_renderUi","_enableAnimation","ngOnChanges","changes","open","_openFlyout","_closeFlyout","_updateFlyoutClassList","classList","tslib_1","__spread","_defaultFlyoutClasses","flyoutClasses","position","push","flyout","nativeElement","className","join","_updateFlyoutTransform","style","transform","element","dimension","parseInt","left","right","top","bottom","offsetWidth","offsetHeight","_updateBackdropClassList","_defaultBackdropClasses","backdropClasses","showBackdrop","backdrop","openChange","emit","flyoutOpened","flyoutClosed","onCloseButtonClick","$event","onBackdropClick","hideOnBackdropClick","Component","selector","template","styles","Output","Input","ViewChild","FlyoutModule","NgModule","imports","BrowserModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlyoutService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-flyout',\n  template: `<div #backdrop (click)='onBackdropClick($event)'>\n</div>\n<div #flyout>\n  <div class=\"close-btn-container\" [ngClass]=\"showCloseButton ? '' : 'hidden'\">\n    <div class=\"close-btn\" (click)='onCloseButtonClick($event)'></div>\n  </div>\n  <div class=\"flyout-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n`,\n  styles: [`.backdrop{position:fixed;top:0;bottom:0;left:0;right:0;background-color:#000;opacity:.5;display:none}.backdrop.open{display:block}.flyout{position:fixed;overflow:auto;background:#fff;-webkit-backface-visibility:hidden;backface-visibility:hidden;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12),0 1px 5px 0 rgba(0,0,0,.2);will-change:transform}.flyout.left{top:0;bottom:0;left:0;height:100vh;max-width:100%}.flyout.right{top:0;bottom:0;right:0;height:100vh;max-width:100%}.flyout.top{left:0;right:0;top:0;width:100%;max-height:100vh}.flyout.bottom{left:0;right:0;bottom:0;max-height:100vh}.flyout.animated{transition:-webkit-transform .3s ease-in-out;transition:transform .3s ease-in-out;transition:transform .3s ease-in-out,-webkit-transform .3s ease-in-out}.close-btn-container{text-align:right}.close-btn-container .close-btn{position:relative;display:inline-block;width:36px;height:36px;cursor:pointer}.close-btn-container .close-btn::after,.close-btn-container .close-btn::before{position:absolute;content:\"\";top:18px;left:6px;right:6px;width:24px;height:1px;background-color:#4b4545}.close-btn-container .close-btn::before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.close-btn-container .close-btn::after{-webkit-transform:rotate(135deg);transform:rotate(135deg)}.close-btn-container.hidden{display:none}`]\n})\n\nexport class FlyoutComponent implements OnInit, OnChanges {\n\n  /**\n   * Fired when flyout is opened\n   *\n   * @memberof FlyoutComponent\n   */\n  @Output()\n  flyoutOpened = new EventEmitter<Object>();\n\n  /**\n   * Fired when flyout is closed\n   *\n   * @memberof FlyoutComponent\n   */\n  @Output()\n  flyoutClosed = new EventEmitter<Object>();\n\n  /**\n   * Use for two way data binding on open\n   *\n   * @memberof FlyoutComponent\n   */\n  @Output()\n  openChange = new EventEmitter<boolean>();\n\n  /**\n   * Position of layout\n   * left, right, top, bottom\n   *\n   * @memberof FlyoutComponent\n   */\n  @Input()\n  position = 'right';\n\n\n  /**\n   * Whether flyout is open or not\n   * \n   * @memberof FlyoutComponent\n   */\n  @Input()\n  open = false;\n\n  /**\n   * Whether to show close button or not\n   * \n   * @memberof FlyoutComponent\n   */\n  @Input()\n  showCloseButton = true;\n\n  /**\n   * Additional css classes to style flyout\n   * \n   * @memberof FlyoutComponent\n   */\n  @Input()\n  flyoutClasses = [];\n\n  /**\n   * Whether to show backdrop or not\n   * \n   * @memberof FlyoutComponent\n   */\n  @Input()\n  showBackdrop = true;\n\n  /**\n   * Whether to close flyout when clicked on backdrop\n   * \n   * @memberof FlyoutComponent\n   */\n  @Input()\n  hideOnBackdropClick = true;\n\n  /**\n   * Additional css classes to style backdrop\n   * \n   * @memberof FlyoutComponent\n   */\n  @Input()\n  backdropClasses = [];\n\n  /**\n   * Flyout element reference\n   *\n   * @memberof FlyoutComponent\n   */\n  @ViewChild('flyout') flyout: ElementRef;\n\n  /**\n   * Backdrop element reference\n   *\n   * @memberof FlyoutComponent\n   */\n  @ViewChild('backdrop') backdrop: ElementRef;\n\n\n  /**\n   * Default css classes which will be applied on flyout\n   *\n   * @memberof FlyoutComponent\n   */\n  _defaultFlyoutClasses = ['flyout'];\n\n  /**\n   * Default css classes which will be applied on backdrop\n   *\n   * @memberof FlyoutComponent\n   */\n  _defaultBackdropClasses = ['backdrop'];\n\n  constructor() { }\n\n  ngOnInit() {\n    this._renderUi();\n    this._enableAnimation();\n  }\n\n  /**\n   * Handle ngOnChanges event\n   *\n   * @memberof FlyoutComponent\n   */\n  ngOnChanges(changes): void {\n    if (changes['open']) {\n      if (this.open) {\n        this._openFlyout();\n      } else {\n        this._closeFlyout();\n      }\n    } else {\n      this._renderUi();\n    }\n  }\n\n  /**\n   * Update css classes on flyout\n   *\n   * @memberof FlyoutComponent\n   */\n  _updateFlyoutClassList() {\n    const classList = [...this._defaultFlyoutClasses, ...this.flyoutClasses, this.position];\n    if (this.open) {\n      classList.push('open');\n    }\n    this.flyout.nativeElement.className = classList.join(' ');\n  }\n\n  /**\n   * Update transporm property of flyout\n   *\n   * @memberof FlyoutComponent\n   */\n  _updateFlyoutTransform() {\n    if (this.open) {\n      this.flyout.nativeElement.style.transform = 'translate3d(0, 0, 0)';\n    } else {\n      const element = this.flyout.nativeElement;\n      const dimension = {\n        left: parseInt(element.style.left, 10) || 0,\n        right: parseInt(element.style.right, 10) || 0,\n        top: parseInt(element.style.top, 10) || 0,\n        bottom: parseInt(element.style.bottom, 10) || 0,\n        width: element.offsetWidth || 0,\n        height: element.offsetHeight || 0\n      };\n\n      switch (this.position) {\n        case 'top':\n          this.flyout.nativeElement.style.transform = 'translate3d(0, -' + dimension.height + 'px, 0)';\n          break;\n        case 'bottom':\n          this.flyout.nativeElement.style.transform = 'translate3d(0, ' + dimension.height + 'px, 0)';\n          break;\n        case 'left':\n          this.flyout.nativeElement.style.transform = 'translate3d(-' + dimension.width + 'px, 0, 0)';\n          break;\n        default:\n          this.flyout.nativeElement.style.transform = 'translate3d(' + dimension.width + 'px, 0, 0)';\n          break;\n      }\n    }\n  }\n\n  /**\n   * Update css classes on backdrop element\n   *\n   * @memberof FlyoutComponent\n   */\n  _updateBackdropClassList() {\n    const classList = [...this._defaultBackdropClasses, ...this.backdropClasses];\n    if (this.showBackdrop && this.open) {\n      classList.push('open');\n    }\n    this.backdrop.nativeElement.className = classList.join(' ');\n  }\n\n  /**\n   * Open/Show flyout\n   *\n   * @memberof FlyoutComponent\n   */\n  _openFlyout() {\n    this.open = true;\n    this._renderUi();\n    this.openChange.emit(this.open);\n    this.flyoutOpened.emit();\n  }\n\n  /**\n   * Close/Hide flyout\n   *\n   * @memberof FlyoutComponent\n   */\n  _closeFlyout() {\n    this.open = false;\n    this._renderUi();\n    this.openChange.emit(this.open);\n    this.flyoutClosed.emit();\n  }\n\n  /**\n   * Render the UI\n   *\n   * @memberof FlyoutComponent\n   */\n  _renderUi() {\n    this._updateBackdropClassList();\n    this._updateFlyoutClassList();\n    this._updateFlyoutTransform();\n  }\n\n  /**\n   * Make flyout animated\n   *\n   * @memberof FlyoutComponent\n   */\n  _enableAnimation() {\n    this._defaultFlyoutClasses.push('animated');\n  }\n\n  /**\n   * Handle close button click event\n   *\n   * @memberof FlyoutComponent\n   */\n  onCloseButtonClick($event) {\n    this._closeFlyout();\n  }\n\n  /**\n   * Handle backdrop click event\n   *\n   * @memberof FlyoutComponent\n   */\n  onBackdropClick($event) {\n    if (this.hideOnBackdropClick) {\n      this._closeFlyout();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FlyoutComponent } from './flyout.component';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [FlyoutComponent],\n  exports: [FlyoutComponent]\n})\nexport class FlyoutModule { }\n"]}